open Probzelus
open Distribution
open Zelus_io

let node mse (true_p, p) = mse where
  rec t = 1. fby (t +. 1.)
  and estimated_p = mean_float p
  and error = (estimated_p -. true_p) ** 2.
  and total_error = error -> (pre total_error) +. error
  and mse = total_error /. t

let node var_metric p = score where
  rec _, v = stats_float p
  and score = -. log v

let id x = x

let node read () =
  let p = Scanf.scanf "%f, " id in
  let obs = Scanf.scanf "%B\n" id in
  p, (), obs

let error_theta = mse
let metric_theta = ess
let error_x _ = 0.
let metric_x _ = 0.

open Infer_apf_mm

let proba model obs = p, () where
  rec init p = sample (beta (1., 1.))
  and () = observe (bernoulli p, obs)

let node main () = () where
  rec i = 1 fby (i + 1)
  and init start = Time.start ()
  and true_theta, true_x, obs = read ()
  and d, time =
    let d = infer { apf_particles=100; apf_mm_particles=100 } model obs in
    let time = Time.time start in
    d, time
  and theta, x = split d
  and () =
    Format.printf "%d, %f, %f, %f, %f, %f@." i
      (error_theta (true_theta, theta)) (metric_theta theta)
      (error_x (true_x, x)) (metric_x x)
      time
